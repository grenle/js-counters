#+TITLE: Simple Counters for javascript
#+AUTHOR: Gregory Houldsworth (grenle)

Here are some simple but useful JavaScript classes. There are:

- ~Counter~: a simple counting device for keys. Similar in
  spirit to Python.
- ~Counter_With_Last_Modified~: A simple counting device for
  keys. Also remembers last time a key was updated.
- ~Perishable_Counter~ A simple counting device for
  keys. Keys too old can be [automatically] erased and will
  appear to have a count of 0.
- ~Counter_With_Limit_Check~ Provides a counter that can
  check(key) for an associated value larger than established
  class-wide limit.

~Counter_With_Limit_Check~ can be used to count user ids and
ips associated with request failures. They can then be
ignored for a while, or forever.

~Counter~ is simple to use:

#+begin_example
> const  c = new Counter()
> c.inc('foo')
> c.inc('foo')
> c.inc('bar')
> c.get('foo')
2
> c.get('bar')
1
> c.get('baz')
0
#+end_example

~Counter_With_Last_Modified~ doesn't add much. You can
obtain the last modification of a count by querying the
~last_modified~ property.

~Perishable_Counter~ has two extra nullary methods:
- ~clear()~: stops the periodic erasing of old keys
- ~clean()~: the cleanup method, deletes keys that are too old.

~Counter_With_Limit_Check~ has two extra unary methods:
- ~is_excessive(k)~ has the count associated with k exceeded
  the limit passed to the constructor?
- ~is_within_limits(k)~ is the count associated with k
  acceptable (i.e. less than limit?)

Open an issue if these explanations are insufficient.

[[file:readme-assets/class-diagram.png]]
